#!/usr/bin/env bash

# Set environment variables for dev or CI
export APP_NAME=${APP_NAME:-my-app}
export APP_PORT=${APP_PORT:-88}
export DB_PORT=${DB_PORT:-3306}
export DB_ROOT_PASSWORD=${DB_ROOT_PASSWORD:-root}
export DB_DATABASE=${DB_DATABASE:-my-app}
export DB_USERNAME=${DB_USERNAME:-app-user}
export DB_PASSWORD=${DB_PASSWORD:-app-pass}

# Decide which docker-compose file to use
COMPOSE="docker-compose"

if [ $# -gt 0 ];then
    if [ "$1" == "art" ]; then
        shift 1
        $COMPOSE run --rm \
            -w /var/www/html \
            app \
            php artisan "$@"
    # If "composer" is used, pass-thru to "composer"
    # inside a new container
    elif [ "$1" == "composer" ]; then
        shift 1
        $COMPOSE run --rm \
            -w /var/www/html \
            app \
            composer "$@"

    # If "test" is used, run unit tests,
    # pass-thru any extra arguments to php-unit
    elif [ "$1" == "test" ]; then
        shift 1
        $COMPOSE run --rm \
            -w /var/www/html \
            app \
            ./vendor/bin/phpunit "$@"

    elif [ "$1" == "t" ]; then
        shift 1
        $COMPOSE exec \
            app \
            sh -c "cd /var/www/html && ./vendor/bin/phpunit $@"

    # If "npm" is used, run npm
    # from our node container
    elif [ "$1" == "npm" ]; then
        shift 1
        $COMPOSE run --rm \
            -w /var/www/html \
            node \
            npm "$@"
        else
        $COMPOSE "$@"
    fi
else
    $COMPOSE ps
fi
